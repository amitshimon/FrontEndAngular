{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create-entity/create-entity.component.html","webpack:///./src/app/create-entity/create-entity.component.ts","webpack:///./src/app/edit-entity/edit-entity.component.html","webpack:///./src/app/edit-entity/edit-entity.component.ts","webpack:///./src/app/entity-details/entity-details.component.html","webpack:///./src/app/entity-details/entity-details.component.ts","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/project-list/project-list.component.html","webpack:///./src/app/project-list/project-list.component.ts","webpack:///./src/app/services/entity-service.ts","webpack:///./src/app/services/loggic-service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProjectListComponent } from './project-list/project-list.component';\nimport { CreateEntityComponent } from './create-entity/create-entity.component';\nimport { EditEntityComponent } from './edit-entity/edit-entity.component';\nimport { EntityDetailsComponent } from './entity-details/entity-details.component';\n\nconst routes: Routes = [\n  { path: 'entity/new', component: CreateEntityComponent },\n  { path: 'entityList', component: ProjectListComponent },\n  { path: 'details/:id', component: EntityDetailsComponent },\n  { path: 'edit/:id', component: EditEntityComponent },\n  { path: '', redirectTo: '/entityList', pathMatch: 'full' }];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientSideApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProjectListComponent } from './project-list/project-list.component';\nimport { CreateEntityComponent } from './create-entity/create-entity.component';\nimport { EditEntityComponent } from './edit-entity/edit-entity.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport{FormsModule, ReactiveFormsModule}from '@angular/forms';\nimport { EntityDetailsComponent } from './entity-details/entity-details.component'\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatSortModule} from '@angular/material/sort';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectListComponent,\n    CreateEntityComponent,\n    EditEntityComponent,\n    NavbarComponent,\n    EntityDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatPaginatorModule,\n    MatSortModule\n \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<h1>Create New Entity</h1>\n<div class=\"form-container\">\n  <form class=\"form\" #newEntityForm=\"ngForm\" (ngSubmit)=\"saveEntity(newEntityForm.value)\" autocomplete=\"off\" novalidate>\n    <div class=\"form-input\" [ngClass]=\"{'error': newEntityForm.controls.name?.invalid && newEntityForm.controls.name?.touched}\">\n      <label [ngClass]=\"{'mini-label':this.CleanName}\" for=\"name\">Entity Name</label>\n      <em *ngIf=\"newEntityForm.controls.name?.invalid && (newEntityForm.controls.name?.touched)\">Required</em>\n      <input (focus)=cleanLabel(1) (keyup)=cleanLabel(1) (focusout)=\"resetName($event)\" (ngModel)=\"newEntity.name\" name=\"name\"\n        required maxlength=\"100\" id=\"name\" type=\"text\" class=\"form-control\" />\n    </div>\n    <div class=\"form-input\" [ngClass]=\"{'error': newEntityForm.controls.date?.invalid && newEntityForm.controls.date?.touched}\">\n      <em *ngIf=\"newEntityForm.controls.date?.invalid && (newEntityForm.controls.date?.touched)\">Required</em>\n      <input (ngModel)=\"newEntity.date\" name=\"date\" required id=\"EntityDate\" type=\"date\" class=\"form-control\" />\n    </div>\n    <div class=\"form-input\" [ngClass]=\"{'error': newEntityForm.controls.description?.invalid && newEntityForm.controls.description?.touched}\">\n      <label [ngClass]=\"{'mini-label':this.CleanDescription}\" for=\"Entitydescription\">Entity Description</label>\n      <em *ngIf=\"newEntityForm.controls.description?.invalid && (newEntityForm.controls.description?.touched)\">Required</em>\n      <input (focus)=cleanLabel(2) (keyup)=cleanLabel(2) (focusout)=\"resetDesc($event)\" (ngModel)=\"newEntity.description\"\n        name=\"description\" required id=\"Entitydescription\" type=\"text\" class=\"form-control\" />\n    </div>\n    <div class=\"form-input\" [ngClass]=\"{'error': newEntityForm.controls.amount?.invalid && newEntityForm.controls.amount?.touched}\">\n      <label [ngClass]=\"{'mini-label':this.CleanAmount}\" for=\"Entityamount\">Entity Amount</label>\n      <em *ngIf=\"newEntityForm.controls.amount?.invalid && (newEntityForm.controls.amount?.touched)\">Required</em>\n      <em *ngIf=\"this.IsLengthBig\">Amount length to big</em>\n      <input (focus)=cleanLabel(3) (keyup)=cleanLabel(3) (focusout)=\"resetAmo($event)\" (input)=\"validate($event, newEntityForm)\"\n        [(ngModel)]=\"newEntity.amount\" name=\"amount\" required id=\"Entityamount\" type=\"number\" class=\"form-control\" />\n    </div>\n    <div>\n      <div class=\"radio-container\">\n        <label class=\"container-is-private\" for=\"isPrivate\">Is Private <i class=\"fas fa-user-secret\"></i></label>\n        <label class=\"isprivate-style\">True</label>\n        <input (ngModel)=\"newEntity.isPrivate\" name=\"isPrivate\" id=\"isPrivate\" type=\"radio\" value=\"true\" checked class=\"form-control\" />\n        <label class=\"isprivate-style\">False</label>\n        <input (ngModel)=\"newEntity.isPrivate\" name=\"isPrivate\" id=\"isPrivate\" type=\"radio\" value=\"false\"  class=\"form-control\" />\n      </div>\n    </div>\n    <div class=\"buuton-container\">\n      <button type=\"submit\" [disabled]=\"newEntityForm.invalid\" class=\"btn-save\">Save <i class=\"fas fa-check\"></i></button>\n      <button type=\"button\" class=\"btn-cancel\" (click)=\"cancel()\">Cancel\n        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n    </div>\n\n  </form>\n</div>\n","import { IEntityToDb } from './../Models/entity-interface';\nimport { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { EntityService } from '../services/entity-service';\nimport { LoggicService } from '../services/loggic-service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-create-entity',\n  templateUrl: './create-entity.component.html',\n  styleUrls: ['./create-entity.component.scss'],\n  providers: [LoggicService]\n})\nexport class CreateEntityComponent implements OnDestroy {\n  sub: Subscription;\n  newEntity: IEntityToDb = {\n    id: null,\n    description: null,\n    amount: null,\n    date: null,\n    isPrivate: null,\n    name: null\n  };\n\n  constructor(private router: Router,\n    private entityService: EntityService,\n    private loggic: LoggicService) {\n\n  }\n  get CleanDescription(): boolean {\n    return this.loggic.cleanDescription;\n  }\n  set CleanDescription(value: boolean) {\n    this.loggic.cleanDescription = value;\n  }\n  set CleanName(value: boolean) {\n    this.loggic.cleanName = value;\n  }\n  set IsLengthBig(value: boolean) {\n    this.loggic.isLengthBig = value;\n  }\n  get IsLengthBig(): boolean {\n    return this.loggic.isLengthBig;\n  }\n  get CleanName(): boolean {\n    return this.loggic.cleanName;\n  }\n\n  set CleanAmount(value: boolean) {\n    this.loggic.cleanAmount = value;\n  }\n  get CleanAmount(): boolean {\n    return this.loggic.cleanAmount;\n  }\n\n  cleanLabel(event): void {\n\n    if (event && event === 1) {\n      this.CleanName = true;\n    }\n    if (event && event === 2) {\n      this.CleanDescription = true;\n    }\n    if (event && event === 3) {\n      this.CleanAmount = true;\n    }\n  }\n  resetAmo(event): void {\n    if (event && event.target.value === '') {\n      this.CleanAmount = false;\n    }\n\n  }\n  numberFieldLength(value): void {\n    if (value.length > 6) {\n      this.newEntity.amount = value.slice(0, 6);\n      this.IsLengthBig = false;\n    }\n  }\n  validate(event, newEntityForm): void {\n\n    if (event.target.value.length > 6) {\n      newEntityForm.form.controls['amount'].setErrors({ 'incorrect': true });\n      debugger\n      this.numberFieldLength(event.target.value);\n      this.IsLengthBig = true;\n    } else {\n      this.IsLengthBig = false;\n    }\n  }\n  resetName(event): void {\n    if (event && event.target.value === '') {\n      this.CleanName = false;\n    }\n  }\n  resetDesc(event): void {\n    if (event && event.target.value === '') {\n      this.CleanDescription = false;\n    }\n  }\n  cancel(): void {\n    this.router.navigate(['/entityList']);\n  }\n\n  saveEntity(formValues): void {\n    this.convertToEntity(formValues);\n    this.sub = this.entityService.CreateEntity(this.newEntity).subscribe(\n      (data) => {\n        this.router.navigate(['/entityList']);\n      },\n      (err: any) => console.log(JSON.stringify(err))\n    );\n  }\n  convertToEntity(formValues): void {\n\n    this.newEntity = {\n      id: undefined,\n      name: formValues.name,\n      amount: formValues.amount,\n      description: formValues.description,\n      isPrivate: formValues.isPrivate,\n      date: ((new Date(formValues.date).getTime() * 10000) + 621355968000000000)\n    }\n  }\n  ngOnDestroy(): void {\n    if (this.sub) { this.sub.unsubscribe(); }\n  }\n}\n","<h1>Edit Entity</h1>\r\n<div class=\"form-container\">\r\n  <form class=\"form\" #webEntityForm=\"ngForm\" (ngSubmit)=\"saveEntity(webEntityForm.value)\" autocomplete=\"off\" novalidate>\r\n    <div class=\"form-input\" [ngClass]=\"{'error': webEntityForm.controls.name?.invalid && webEntityForm.controls.name?.touched}\">\r\n      <label [ngClass]=\"{'mini-label':CleanName ||webEntity.name}\" for=\"name\">Entity Name</label>\r\n      <em *ngIf=\"webEntityForm.controls.name?.invalid && (webEntityForm.controls.name?.touched)\">Required</em>\r\n      <input (focus)=cleanLabel(1) (keyup)=cleanLabel(1) (focusout)=\"resetName($event)\" [(ngModel)]=\"webEntity.name\"\r\n        name=\"name\" required maxlength=\"100\" id=\"name\" type=\"text\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-input\" [ngClass]=\"{'error': webEntityForm.controls.date?.invalid && webEntityForm.controls.date?.touched}\">\r\n      <em *ngIf=\"webEntityForm.controls.date?.invalid && (webEntityForm.controls.date?.touched)\">Required</em>\r\n      <input (ngModelChange)=\"webEntity.date = $event\" [ngModel]=\"webEntity.date | date:'yyyy-MM-dd'\" name=\"date\" required id=\"EntityDate\" type=\"date\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-input\" [ngClass]=\"{'error': webEntityForm.controls.description?.invalid && webEntityForm.controls.description?.touched}\">\r\n      <label [ngClass]=\"{'mini-label':CleanDescription||webEntity.description}\" for=\"Entitydescription\">Entity Description</label>\r\n      <em *ngIf=\"webEntityForm.controls.description?.invalid && (webEntityForm.controls.description?.touched)\">Required</em>\r\n      <input (focus)=cleanLabel(2) (keyup)=cleanLabel(2) (focusout)=\"resetDesc($event)\" [(ngModel)]=\"webEntity.description\"\r\n        name=\"description\" required id=\"Entitydescription\" type=\"text\" class=\"form-control\" />\r\n    </div>\r\n    <div class=\"form-input\" [ngClass]=\"{'error': webEntityForm.controls.amount?.invalid && webEntityForm.controls.amount?.touched}\">\r\n      <label [ngClass]=\"{'mini-label':CleanAmount || webEntity.amount}\" for=\"Entityamount\">Entity Amount</label>\r\n      <em *ngIf=\"webEntityForm.controls.amount?.invalid && (webEntityForm.controls.amount?.touched)\">Required</em>\r\n      <em *ngIf=\"IsLengthBig\">Amount length to big</em>\r\n      <input (focus)=cleanLabel(3) (keyup)=cleanLabel(3) (focusout)=\"resetAmo($event)\" (input)=\"validate($event, webEntityForm)\"\r\n        [(ngModel)]=\"webEntity.amount\" name=\"amount\" required id=\"Entityamount\" type=\"number\" class=\"form-control\" />\r\n    </div>\r\n    <div>\r\n      <div class=\"radio-container\">\r\n        <label class=\"container-is-private\" for=\"isPrivate\">Is Private <i class=\"fas fa-user-secret\"></i></label>\r\n        <label class=\"isprivate-style\">True</label>\r\n        <input [(ngModel)]=\"webEntity.isPrivate\" name=\"isPrivate\" type=\"radio\" [value]=\"true\" class=\"form-control\" />\r\n        <label class=\"isprivate-style\">False</label>\r\n        <input [(ngModel)]=\"webEntity.isPrivate\" name=\"isPrivate\" type=\"radio\" [value]=\"false\" class=\"form-control\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"buuton-container\">\r\n      <button type=\"submit\" [disabled]=\"webEntityForm.invalid\" class=\"btn-save\">Save <i class=\"fas fa-check\"></i></button>\r\n      <button type=\"button\" class=\"btn-cancel\" [routerLink]=\"['/details', webEntity.id]\">Cancel\r\n        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\r\n    </div>\r\n\r\n  </form>\r\n</div>\r\n","import { IEntityToDb } from './../Models/entity-interface';\nimport { LoggicService } from './../services/loggic-service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { EntityService } from '../services/entity-service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-edit-entity',\n  templateUrl: './edit-entity.component.html',\n  styleUrls: ['./edit-entity.component.scss'],\n  providers: [LoggicService]\n})\nexport class EditEntityComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  webEntity: IEntityToDb = {\n    id: null,\n    description: null,\n    amount: null,\n    date: null,\n    isPrivate: null,\n    name: null\n  };\n\n  constructor(private route: ActivatedRoute,\n    private entityService: EntityService,\n    private loggic: LoggicService,\n    private router: Router) { }\n\n  get CleanDescription(): boolean {\n    return this.loggic.cleanDescription;\n  }\n  set CleanDescription(value: boolean) {\n    this.loggic.cleanDescription = value;\n  }\n  set CleanName(value: boolean) {\n    this.loggic.cleanName = value;\n  }\n  set IsLengthBig(value: boolean) {\n    this.loggic.isLengthBig = value;\n  }\n  get IsLengthBig(): boolean {\n    return this.loggic.isLengthBig;\n  }\n  get CleanName(): boolean {\n    return this.loggic.cleanName;\n  }\n\n  set CleanAmount(value: boolean) {\n    this.loggic.cleanAmount = value;\n  }\n  get CleanAmount(): boolean {\n    return this.loggic.cleanAmount;\n  }\n\n  cleanLabel(event): void {\n\n    if (event && event === 1) {\n      this.CleanName = true;\n    }\n    if (event && event === 2) {\n      this.CleanDescription = true;\n    }\n    if (event && event === 3) {\n      this.CleanAmount = true;\n    }\n  }\n  resetAmo(event): void {\n\n    if (event && event.target.value === '') {\n      this.CleanAmount = false;\n    }\n  }\n\n  validate(event, newEntityForm): void {\n\n    if (event.target.value.length > 5) {\n      newEntityForm.form.controls['amount'].setErrors({ 'incorrect': true });\n      this.IsLengthBig = true;\n    } else {\n      this.IsLengthBig = false;\n    }\n  }\n  resetName(event): void {\n    if (event && event.target.value === '') {\n      this.CleanName = false;\n    }\n  }\n  resetDesc(event): void {\n    if (event && event.target.value === '') {\n      this.CleanDescription = false;\n    }\n  }\n  ngOnInit() {\n    this.route.params.forEach((params: Params) => {\n      this.entityService.getEntityById(params['id']).subscribe((data) => {\n        this.webEntity = data,\n          (error) => console.log(error)\n      });\n\n    });\n  }\n  saveEntity(formValues): void {\n    this.webEntity.date = this.loggic.convaertDateToTicks(formValues);\n    this.sub = this.entityService.updateEntity(this.webEntity).subscribe(\n      (data) => {\n        this.webEntity = data;\n        this.router.navigate(['/details/' + this.webEntity.id]);\n      },\n      (err: any) => console.log(JSON.stringify(err))\n    );\n\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","<div class=\"h1-header\">\n  <h1>Entity Details</h1>\n</div>\n<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"date\">\n      <div class=\"datewrapper\">\n        <p>{{webEntity?.date | date : 'dd/MM/yyyy'}}</p>\n      </div>\n    </div>\n    <div class=\"name\">\n      <p name=\"name\">{{webEntity?.name}}</p>\n    </div>\n    <hr />\n    <div class=\"is-private\">\n      <div class=\"labelwrrap\">\n        <label for=\"\" class=\"\">Private:<i id=\"pri-icon\" class=\"fas fa-lock\"></i></label>\n      </div>\n      <div class=\"pwrrap\">\n        <p>{{webEntity?.isPrivate}}</p>\n      </div>\n    </div>\n    <div class=\"amount\">\n      <div class=\"labelwrrap\">\n        <label for=\"\" class=\"\">Quantity:</label>\n      </div>\n      <div class=\"pwrrap\">\n        <p>{{webEntity?.amount}}</p>\n      </div>\n    </div>\n    <div class=\"description\">\n      <div class=\"labelwrrap-desc\">\n        <label for=\"\" class=\"desc-la\">Description:</label>\n      </div>\n      <div class=\"pwrrap-desc\">\n        <p>\n          {{webEntity?.description}} Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem\n          Ipsum \n        </p>\n      </div>\n    </div>\n    <div class=\"bun-con\" *ngIf=\"!confirmDelete\">\n      <div class=\"edit\">\n        <button [routerLink]=\"['/edit', webEntity?.id]\" class=\"btn-edit\">Edit <i class=\"far fa-edit\"></i></button>\n      </div>\n      <div class=\"delete\">\n        <button (click)=\"confirmDelete = true\" class=\"btn-delet\">Delete <i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n      </div>\n\n    </div>\n    <div class=\"bun-con\" *ngIf=\"confirmDelete\">\n      <div class=\"con-warnning\">\n        <span class=\"danger\">\n          Are You Sure You Want To Delete?\n        </span>\n        <div class=\"btn-confirm-con\">\n          <div class=\"edit\">\n            <button (click)=\"confirmDelete = false\" class=\"btn-edit\">Cancel <i class=\"far fa-edit\"></i></button>\n          </div>\n          <div class=\"delete\">\n            <button (click)=\"deleteEntity()\" class=\"btn-delet\">Yes <i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Subscription } from 'rxjs';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Params, ActivatedRoute, Router } from '@angular/router';\nimport { IEntityToDb } from '../Models/entity-interface';\nimport { EntityService } from '../services/entity-service';\n\n@Component({\n  selector: 'app-entity-details',\n  templateUrl: './entity-details.component.html',\n  styleUrls: ['./entity-details.component.scss']\n})\nexport class EntityDetailsComponent implements OnInit, OnDestroy {\n  sub: Subscription;\n  confirmDelete: boolean = false;\n  webEntity: IEntityToDb;\n  constructor(private activateRouter: ActivatedRoute,\n    private entityService: EntityService, private route: Router) { }\n\n  ngOnInit() {\n    this.activateRouter.params.forEach((params: Params) => {\n      this.sub = this.entityService.getEntityById(params['id']).subscribe((data) => {\n        this.webEntity = data,\n          (error) => console.log(error)\n      });\n    });\n  }\n  deleteEntity(): void {\n    debugger\n    this.sub = this.entityService.deleteEntity(this.webEntity.id).subscribe(() => {\n      this.route.navigate(['/entityList']),\n        (error) => console.log(error)\n    });\n  }\n  ngOnDestroy(): void {\n    if (this.sub) { this.sub.unsubscribe(); }\n  }\n}\n","<ul class=\"container\">\n  <li><a [routerLink]=\"['/entityList']\">Home</a></li>\n  <li><a [routerLink]=\"['/entity/new']\">Create Entity</a></li>\n  <li id='search' class=\"dropdown\">\n    <input placeholder=\"Search\" class=\"dropbtn\" (keyup)=search($event) autocomplete=\"off\" />\n    <button  class=\"search-btn\"><i class=\"fa fa-search\"></i></button>\n    <div class=\"dropdown-content\" *ngIf=\"whenSearch\">\n      <div class=\"showcontent\" *ngFor=\"let enName of filterEntitysName\">\n        <a class=\"link\" (focusout)=\"reset()\" [routerLink]=\"['/details', enName.id]\">{{enName.name}}</a>\n        <hr>\n      </div>\n    </div>\n  </li>\n</ul>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IEntityToDb } from '../Models/entity-interface';\nimport { EntityService } from '../services/entity-service';\nimport { Params, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n  sub: Subscription;\n  private _whenSearch: boolean = false;\n  entitysName: IEntityToDb[];\n  filterEntitysName: IEntityToDb[] = [];\n  searchWord: string = '';\n\n  constructor(private entityService: EntityService,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.sub = this.entityService.newEntitySubject$.subscribe(\n      (data) => {\n        if (data) {\n          this.entitysName.push(data);\n          this.filterEntitysName.push(data);\n        }\n      }\n    );\n\n    this.sub = this.entityService.getEntity().subscribe((data) => {\n      this.entitysName = data\n    },\n      (error) => {\n        console.log(error);\n      });\n  }\n\n  reset() {\n    this.filterEntitysName = [];\n    this.whenSearch = false;\n  }\n  get whenSearch(): boolean {\n    return this._whenSearch;\n  }\n  set whenSearch(theWhenSearch: boolean) {\n    this._whenSearch = theWhenSearch;\n  }\n\n  search(event): void {\n    debugger\n    this.filterEntitysName = [];\n    this.entitysName.filter(entitName => {\n      if (event.target.value != \"\") {\n        if (entitName.name.toLowerCase().indexOf(event.target.value.toLowerCase()) > -1) {\n          this.whenSearch = true;\n          this.filterEntitysName.push(entitName);\n        }\n      } else {\n        this.whenSearch = false;\n        this.filterEntitysName = [];\n      }\n\n    });\n\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","  <table mat-table [dataSource]=\"sorted\" matSort class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>ID</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell mat-sort-header *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"isPrivate\">\n      <th mat-header-cell *matHeaderCellDef>Is Private</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.isPrivate}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"amount\">\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.amount}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell mat-sort-header *matHeaderCellDef> Date </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.date | date: 'dd/MM/yyyy'}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Description </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row  *matRowDef=\"let row; columns: displayedColumns;\" [routerLink]=\"['/details', row?.id]\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { IEntityToDb } from '../Models/entity-interface';\nimport { EntityService } from '../services/entity-service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-project-list',\n  templateUrl: './project-list.component.html',\n  styleUrls: ['./project-list.component.scss']\n})\nexport class ProjectListComponent implements OnInit , OnDestroy{\n  \n  sub:Subscription;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  sorted = null;\n  errorMessage: string;\n  displayedColumns: string[] = ['id', 'name', 'amount', 'description', 'isPrivate', 'date'];\n  dataSource: IEntityToDb[];\n  date: Date = new Date();\n  constructor(private entityService: EntityService) { }\n\n\n  ngOnInit() {\n    this.sub =this.entityService.getEntity().subscribe(\n      (data) => {\n        this.sorted = new MatTableDataSource<IEntityToDb>(data);\n        this.sorted.paginator = this.paginator;\n        this.sorted.sort = this.sort;\n        this.dataSource = data;\n      },\n      (error) => {\n        this.errorMessage = <any>error;\n        console.log(this.errorMessage);\n      });\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable, throwError, of, Subject, BehaviorSubject } from 'rxjs';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from \"@angular/common/http\";\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { IEntityToDb } from '../Models/entity-interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntityService {\r\n  private entitys: IEntityToDb[];\r\n  private entitySubject = new BehaviorSubject<IEntityToDb>(null);\r\n  newEntitySubject$ = this.entitySubject.asObservable();\r\n\r\n  addNewEntity(newEntity: IEntityToDb): void {\r\n    this.entitySubject.next(newEntity);\r\n  }\r\n  constructor(private http: HttpClient) { }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    debugger\r\n    console.error('An error occurred:', error.error);\r\n    return throwError(\"Method not implemented.\");\r\n  }\r\n  private entityUrl = 'http://amitshimon.gearhostpreview.com/api/entity';\r\n\r\n  getEntity(): Observable<IEntityToDb[]> {\r\n\r\n    if (this.entitys) {\r\n      return of(this.entitys);\r\n    }\r\n\r\n    return this.http.get<IEntityToDb[]>(this.entityUrl + '/getAllEntitys').pipe(\r\n      tap(data => console.log('All:' + JSON.stringify(data))),\r\n      tap(data => this.entitys = data),\r\n      catchError(this.handleError));\r\n  }\r\n\r\n  getEntityById(id: string): Observable<IEntityToDb> {\r\n\r\n    if (this.entitys) {\r\n      const entityById = this.entitys.find(entity => entity.id === id);\r\n      return of(entityById);\r\n    }\r\n    return this.http.get<IEntityToDb>(this.entityUrl + \"/getEntityById/\" + id).pipe(\r\n      tap(data => console.log('ById:' + JSON.stringify(data)))\r\n      , catchError(this.handleError));\r\n  }\r\n\r\n  CreateEntity(entity: IEntityToDb): Observable<IEntityToDb> {\r\n    const headers = new HttpHeaders().set('content-type', 'application/json');\r\n    return this.http.post<IEntityToDb>(this.entityUrl + '/createEntity', entity, { headers })\r\n      .pipe(\r\n        tap(data => console.log(JSON.stringify(data))),\r\n        tap(data => {\r\n          data.date = this.convertTicksToDate(data.date)\r\n          this.entitys.push(data);\r\n          this.addNewEntity(entity);\r\n        })\r\n      );\r\n  }\r\n\r\n  updateEntity(entity: IEntityToDb): Observable<IEntityToDb> {\r\n\r\n    const params = new HttpParams().set('id', entity.id.toString());\r\n    const headers = new HttpHeaders().set('content-type', 'application/json');\r\n\r\n    return this.http.put<IEntityToDb>(this.entityUrl + '/updateEntity/' + entity.id, entity, { headers, params });\r\n  }\r\n\r\n  deleteEntity(id: string): Observable<IEntityToDb> {\r\n    return this.http.delete<IEntityToDb>(this.entityUrl + '/deleteEntity/' + id).pipe(\r\n      tap(data => console.log(JSON.stringify(data))),\r\n      tap(data => {\r\n        const index = this.entitys.findIndex(entity => entity.id === id);\r\n        if (index > -1) {\r\n          this.entitys.splice(index, 1);\r\n        }\r\n      })\r\n    );\r\n  }\r\n  convertTicksToDate(date: number): any {\r\n\r\n    var ticks = date;\r\n    var ticksToMicrotime = ticks / 10000;\r\n    var epochMicrotimeDiff = 2208988800000;\r\n    var tickDate = new Date(ticksToMicrotime - epochMicrotimeDiff);\r\n    return tickDate;\r\n  }\r\n}\r\n","import { IEntityToDb } from \"../Models/entity-interface\";\r\nimport { Injectable } from \"@angular/core\";\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggicService {\r\n\r\n    newEntity: IEntityToDb;\r\n    cleanAmount: boolean = false;\r\n    cleanDescription: boolean = false;\r\n    cleanName: boolean = false;\r\n    isLengthBig: boolean = null;\r\n\r\n    convaertDateToTicks(formvalue): number {\r\n        return ((new Date(formvalue.date).getTime() * 10000) + 621355968000000000);\r\n    }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport 'hammerjs';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}